项目：带主存的操作系统模拟软件
需求分析：
1、有一个主界面，左侧显示New、Ready、Running、Terminated队列，右侧显示主存分布（未分分区表、主存示意图）。
2、主界面下方具有按钮，可进行：创建自定义进程按钮；创建多个随机进程按钮；清空全部进程按钮；下一步按钮。
（3、尽可能多地使用设计模式）
程序设计：
    一、架构设计：
        1、分为内部逻辑层、中介控制器和外部显示层；内部逻辑层再分为数据模型层和策略层。
        2、策略层分为根据最先适应算法实现的策略类。
        3、中介控制器：负责接受用户操作，调用策略层和服务层更改底层数据和调用外部显示层显示数据。
        4、数据模型层分为pojo类（Process、Memory）、用于存储Process的4个状态队列集合、集成了简单操作的服务层。
        5、外部显示层分为界面层和显示方法层，界面层为相关界面文件，显示方法集成了对其的操作。
    二、内部流程设计：
        1、客户端按下按钮->调用控制器类。
        2、控制器判断是下一步按钮或是其他按钮，其他按钮则直接对数据模型的状态队列进行调整（不需要策略类）。
        3、控制器->获得策略类，传入service类充当中介者。
        4、策略类调用服务层的方法进行宏观操作。
        5、服务层对4个队列集合进行具体操作。
        6、控制器调用外部显示层的显示方法进行更新。
        7、外部显示层更改显示，将结果返回到客户端界面。
    三、界面设计：略
    四、可尝试的优化：
        1、使用享元模式优化显示层的更新和对数据模型层队列集合的更改（或者解释器模式？）。
        2、使用简易工厂创建进程类、使用单例工厂创建主存类。
        3、内部逻辑层和外部显示层之间使用外观模式进行封装。
        4、队列集合使用桥接和装饰模式优化。
        5、使用中介者模式解耦策略类和数据层的交互？
        （6、使用状态模式代替4个队列集合）
        （7、使用备忘录模式记录操作，实现回退操作）
详细设计：
    一、内部逻辑层
        1、数据模型层
            pojo：
                Process：存放了pid、runTime、priority、state、size、beginSite、PCBPtr。
                Memory：存放了内存大小的final值、未分分区表的Map。
            queueConnection:
                NewList：new队列。
                ReadyList：Ready队列，判断能否加入的逻辑写在策略类中。
                RunningList：Running队列，内部包含了有无剩余道数的逻辑，可使用addable函数判断是否可继续加入。
                TerminatedList：Terminated队列。
其余略。。。
